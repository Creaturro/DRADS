---
// Timeline Component for DRADS Project
// Converted from React to Astro following DRADS design system

import svgPaths from "@scripts/timeline-svg-paths";
import InfographicCard from "./InfographicCard.astro";
import TimelineTooltip from "./TimelineTooltip.astro";

// Props for different contexts
export interface Props {
  context?: 'full-page' | 'section';
  showCalibrationDots?: boolean;
}

const { context = 'full-page', showCalibrationDots = false } = Astro.props;

// Calibration positions - shared between dots, icons, and arrows
const calibrationPositions = {
  magenta: { x: 437, y: 89 }, // TEST: moved 73px right, 51px up (was 364, 140)
  green: { x: 90, y: 308 },
  blue: { x: 430, y: 488 }, // TEST: moved 80px right, 130px up (was 350, 618)
  orange: { x: 66, y: 713 },
  red: { x: 302, y: 1012 }
};

// Frame component data - adaptive positioning for different contexts
const getFrames = (context: string) => {
  if (context === 'section') {
    // Scaled down positioning for section context
    return [
      { number: "1", text: "week", top: "8%" },
      { number: "2", text: "weeks", top: "20%" },
      { number: "3", text: "weeks", top: "32%" },
      { number: "4", text: "weeks", top: "44%" },
      { number: "8", text: "weeks", top: "56%" },
      { number: "16", text: "weeks", top: "68%" },
      { number: "24-32", text: "weeks", top: "80%" }
    ];
  } else {
    // Original positioning for full page
    return [
      { number: "1", text: "week", top: "calc(50% - 1245.43px)" },
      { number: "2", text: "weeks", top: "calc(50% - 1049.46px)" },
      { number: "3", text: "weeks", top: "calc(50% - 854.461px)" },
      { number: "4", text: "weeks", top: "calc(50% - 658.461px)" },
      { number: "8", text: "weeks", top: "calc(50% + 39.5389px)" },
      { number: "16", text: "weeks", top: "calc(50% + 636.539px)" },
      { number: "24-32", text: "weeks", top: "calc(50% + 1143.54px)" }
    ];
  }
};

const frames = getFrames(context);

// Arrow configurations
const arrows = [
  { height: "138px", top: "11px", width: "138px", pathKey: "p34cbdc80", viewBox: "0 0 150 12" },
  { height: "90px", top: "255px", width: "90px", pathKey: "pf96a480", viewBox: "0 0 102 12" },
  { height: "90px", top: "451px", width: "90px", pathKey: "pf96a480", viewBox: "0 0 102 12" },
  { height: "90px", top: "646px", width: "90px", pathKey: "pf96a480", viewBox: "0 0 102 12" },
  { height: "592px", top: "842px", width: "592px", pathKey: "pc45f80", viewBox: "0 0 604 12" },
  { height: "234px", top: "2137px", width: "234px", pathKey: "p1411a500", viewBox: "0 0 240 12" },
  { height: "184px", top: "1847px", width: "184px", pathKey: "p2311e3c0", viewBox: "0 0 190 12" },
  { height: "148px", top: "2390px", width: "148px", pathKey: "p201ad800", viewBox: "0 0 154 12" }
];

// Milestone data - adaptive positioning for different contexts
const getMilestones = (context: string) => {
  if (context === 'section') {
    // Scaled down positioning for section context
    return [
      // Magenta (DRADS, left, tail right)
      {
        label: "app specs ready",
        top: "12%", // just under 1 week
        color: "#AB1E81",
        text: "app specs\nready",
        tail: "right",
        icon: `<svg xmlns="http://www.w3.org/2000/svg" width="32" height="22" viewBox="0 0 37.517 26.447"><path d="M7517.254,17143.445h-21.949a3.307,3.307,0,0,1-3.3-3.3v-19.832a3.313,3.313,0,0,1,3.3-3.309h18.644v6.613h-18.644v16.527h21.949v3.3Zm4,0h0v-3.3h.5v-16.527h-3.8V17117h3.8a3.32,3.32,0,0,1,3.309,3.309v14.766Zm-20.165-4.953v0l-2.314-2.312,4.255-4.3-4.3-4.3,2.358-2.311,6.609,6.609-6.609,6.611Z" transform="translate(-7492.001 -17117)" fill="#fff"></path><path d="M115.733-773.553V-788.43h-3.306V-800H124l-3.306,8.265H124Z" transform="translate(-86.48 800)" fill="#fff"></path></svg>`
      },
      {
        label: "working prototype",
        top: "36%", // under 3 weeks
        color: "#AB1E81",
        text: "working\nprototype",
        tail: "right",
        icon: `<svg xmlns="http://www.w3.org/2000/svg" width="32" height="22" viewBox="0 0 37.517 26.447"><path d="M7517.254,17143.445h-21.949a3.307,3.307,0,0,1-3.3-3.3v-19.832a3.313,3.313,0,0,1,3.3-3.309h18.644v6.613h-18.644v16.527h21.949v3.3Zm4,0h0v-3.3h.5v-16.527h-3.8V17117h3.8a3.32,3.32,0,0,1,3.309,3.309v14.766Zm-20.165-4.953v0l-2.314-2.312,4.255-4.3-4.3-4.3,2.358-2.311,6.609,6.609-6.609,6.611Z" transform="translate(-7492.001 -17117)" fill="#fff"></path><path d="M115.733-773.553V-788.43h-3.306V-800H124l-3.306,8.265H124Z" transform="translate(-86.48 800)" fill="#fff"></path></svg>`
      },
      {
        label: "your app is ready",
        top: "60%", // under 8 weeks
        color: "#AB1E81",
        text: "your app\nis ready",
        tail: "right",
        icon: `<svg xmlns="http://www.w3.org/2000/svg" width="32" height="22" viewBox="0 0 37.517 26.447"><path d="M7517.254,17143.445h-21.949a3.307,3.307,0,0,1-3.3-3.3v-19.832a3.313,3.313,0,0,1,3.3-3.309h18.644v6.613h-18.644v16.527h21.949v3.3Zm4,0h0v-3.3h.5v-16.527h-3.8V17117h3.8a3.32,3.32,0,0,1,3.309,3.309v14.766Zm-20.165-4.953v0l-2.314-2.312,4.255-4.3-4.3-4.3,2.358-2.311,6.609,6.609-6.609,6.611Z" transform="translate(-7492.001 -17117)" fill="#fff"></path><path d="M115.733-773.553V-788.43h-3.306V-800H124l-3.306,8.265H124Z" transform="translate(-86.48 800)" fill="#fff"></path></svg>`
      },
      // Cyan (Traditional, right, tail left)
      {
        label: "app specs ready",
        top: "20%", // under 2 weeks
        color: "#1DA6AE",
        text: "app specs\nready",
        tail: "left",
        icon: null
      },
      {
        label: "design prototype",
        top: "40%", // under 4 weeks
        color: "#1DA6AE",
        text: "design\nprototype",
        tail: "left",
        icon: null
      },
      {
        label: "working prototype",
        top: "65%", // under 16 weeks
        color: "#1DA6AE",
        text: "working\nprototype",
        tail: "left",
        icon: null
      },
      {
        label: "your app is ready",
        top: "80%", // under 32 weeks (was 84%)
        color: "#1DA6AE",
        text: "your app\nis ready",
        tail: "left",
        icon: null
      }
    ];
  } else {
    // Original positioning for full page
    return [
      // Magenta (DRADS, left, tail right)
      {
        label: "app specs ready",
        top: "calc(50% - 1245.43px + 55px)", // just under 1 week, +15px
        color: "#AB1E81",
        text: "app specs\nready",
        tail: "right",
        icon: `<svg xmlns="http://www.w3.org/2000/svg" width="32" height="22" viewBox="0 0 37.517 26.447"><path d="M7517.254,17143.445h-21.949a3.307,3.307,0,0,1-3.3-3.3v-19.832a3.313,3.313,0,0,1,3.3-3.309h18.644v6.613h-18.644v16.527h21.949v3.3Zm4,0h0v-3.3h.5v-16.527h-3.8V17117h3.8a3.32,3.32,0,0,1,3.309,3.309v14.766Zm-20.165-4.953v0l-2.314-2.312,4.255-4.3-4.3-4.3,2.358-2.311,6.609,6.609-6.609,6.611Z" transform="translate(-7492.001 -17117)" fill="#fff"></path><path d="M115.733-773.553V-788.43h-3.306V-800H124l-3.306,8.265H124Z" transform="translate(-86.48 800)" fill="#fff"></path></svg>`
      },
      {
        label: "working prototype",
        top: "calc(50% - 854.461px + 55px)", // under 3 weeks, +15px
        color: "#AB1E81",
        text: "working\nprototype",
        tail: "right",
        icon: `<svg xmlns="http://www.w3.org/2000/svg" width="32" height="22" viewBox="0 0 37.517 26.447"><path d="M7517.254,17143.445h-21.949a3.307,3.307,0,0,1-3.3-3.3v-19.832a3.313,3.313,0,0,1,3.3-3.309h18.644v6.613h-18.644v16.527h21.949v3.3Zm4,0h0v-3.3h.5v-16.527h-3.8V17117h3.8a3.32,3.32,0,0,1,3.309,3.309v14.766Zm-20.165-4.953v0l-2.314-2.312,4.255-4.3-4.3-4.3,2.358-2.311,6.609,6.609-6.609,6.611Z" transform="translate(-7492.001 -17117)" fill="#fff"></path><path d="M115.733-773.553V-788.43h-3.306V-800H124l-3.306,8.265H124Z" transform="translate(-86.48 800)" fill="#fff"></path></svg>`
      },
      {
        label: "your app is ready",
        top: "calc(50% + 39.5389px + 55px)", // under 8 weeks, +15px
        color: "#AB1E81",
        text: "your app\nis ready",
        tail: "right",
        icon: `<svg xmlns="http://www.w3.org/2000/svg" width="32" height="22" viewBox="0 0 37.517 26.447"><path d="M7517.254,17143.445h-21.949a3.307,3.307,0,0,1-3.3-3.3v-19.832a3.313,3.313,0,0,1,3.3-3.309h18.644v6.613h-18.644v16.527h21.949v3.3Zm4,0h0v-3.3h.5v-16.527h-3.8V17117h3.8a3.32,3.32,0,0,1,3.309,3.309v14.766Zm-20.165-4.953v0l-2.314-2.312,4.255-4.3-4.3-4.3,2.358-2.311,6.609,6.609-6.609,6.611Z" transform="translate(-7492.001 -17117)" fill="#fff"></path><path d="M115.733-773.553V-788.43h-3.306V-800H124l-3.306,8.265H124Z" transform="translate(-86.48 800)" fill="#fff"></path></svg>`
      },
      // Cyan (Traditional, right, tail left)
      {
        label: "app specs ready",
        top: "calc(50% - 1049.46px + 55px)", // under 2 weeks, +15px
        color: "#1DA6AE",
        text: "app specs\nready",
        tail: "left",
        icon: null
      },
      {
        label: "design prototype",
        top: "calc(50% - 658.461px + 55px)", // under 4 weeks, +15px
        color: "#1DA6AE",
        text: "design\nprototype",
        tail: "left",
        icon: null
      },
      {
        label: "working prototype",
        top: "calc(50% + 636.539px + 55px)", // under 16 weeks, +15px
        color: "#1DA6AE",
        text: "working\nprototype",
        tail: "left",
        icon: null
      },
      {
        label: "your app is ready",
        top: "calc(50% + 1143.54px + 55px)", // under 32 weeks, +15px
        color: "#1DA6AE",
        text: "your app\nis ready",
        tail: "left",
        icon: null
      }
    ];
  }
};

const milestones = getMilestones(context);

// Dynamic height and positioning based on context
const timelineHeight = context === 'section' ? 'h-[2800px]' : 'h-[2894.92px]';
---



<div class="flex flex-col md:flex-row w-full relative">
  <!-- Left Column (DRADS) -->
  <div class="w-full md:w-[40%] bg-[#25202D] overflow-visible flex flex-col items-start p-4 relative">
    <div class="flex flex-col gap-y-2 w-full">
      <InfographicCard title="Brief and Research" description="The initial specs are narrow and highly focused with the goal of starting the implementation ASAP.">
        <img slot="icon" src="/images/Timeline/timeline_cards_images/new_drads/brief.png" alt="Brief and Research" class="w-[240px] h-[180px] timeline-image-brief object-contain" style="margin-top: 60px;" />
      </InfographicCard>
      <InfographicCard title="Asynchronous Frontend Coding" description="We can work on your app's user interface and logic simultaneously. This parallel development eliminates bottlenecks, speeding up the entire process." reversed={true}>
        <img slot="icon" src="/images/Timeline/timeline_cards_images/new_drads/front.png" alt="Asynchronous Frontend Coding" class="w-[240px] h-[180px] timeline-image-frontend object-contain" style="margin-top: 60px;" />
      </InfographicCard>
      <InfographicCard title="Asynchronous Design Work" description="Design is happening along side the app development. The interface elements are added into the app directly and are instantly connected to the app code.">
        <img slot="icon" src="/images/Timeline/timeline_cards_images/new_drads/design.png" alt="Asynchronous Design Work" class="w-[240px] h-[180px] timeline-image-design object-contain" style="margin-top: 60px;" />
      </InfographicCard>
      <InfographicCard title="“Glueing” systems through APIs" description="Developers quickly integrate various services and functionalities using pre-built or custom APIs, ensuring seamless data flow and communication." reversed={true}>
        <img slot="icon" src="/images/Timeline/timeline_cards_images/new_drads/GlueAPI.png" alt="Glueing systems through APIs" class="w-[230px] h-[173px] timeline-image-glue object-contain" />
      </InfographicCard>
      <div class="mt-[130px]">
        <InfographicCard title="Live Testing" description="The application is swiftly deployed using pre-configured environments, allowing immediate testing and validation to ensure the app meets the desired specifications and functions correctly.">
          <img slot="icon" src="/images/Timeline/timeline_cards_images/new_drads/Testing.png" alt="Live Testing" class="w-[240px] h-[180px] timeline-image-testing object-contain" style="margin-top: 60px;" />
        </InfographicCard>
      </div>
    </div>
    
    {showCalibrationDots ? (
      <>
        <!-- Magenta dot for calibration (Brief and Research) -->
        <div class="absolute left-0 top-0 w-full h-full pointer-events-none" style="z-index: 50;">
          <svg class="absolute w-full h-full" style="top: 0; left: 0;">
            <circle cx={calibrationPositions.magenta.x} cy={calibrationPositions.magenta.y} r="12" fill="#AB1E81" stroke="#fff" stroke-width="3" />
          </svg>
        </div>
        
        <!-- Green dot for calibration (Asynchronous Frontend Coding) -->
        <div class="absolute left-0 top-0 w-full h-full pointer-events-none" style="z-index: 50;">
          <svg class="absolute w-full h-full" style="top: 0; left: 0;">
            <circle cx={calibrationPositions.green.x} cy={calibrationPositions.green.y} r="12" fill="#22c55e" stroke="#fff" stroke-width="3" />
          </svg>
        </div>
        
        <!-- Blue dot for calibration (Design Work) -->
        <div class="absolute left-0 top-0 w-full h-full pointer-events-none" style="z-index: 50;">
          <svg class="absolute w-full h-full" style="top: 0; left: 0;">
            <circle cx={calibrationPositions.blue.x} cy={calibrationPositions.blue.y} r="12" fill="#3b82f6" stroke="#fff" stroke-width="3" />
          </svg>
        </div>
        
        <!-- Orange dot for calibration (Glueing) -->
        <div class="absolute left-0 top-0 w-full h-full pointer-events-none" style="z-index: 50;">
          <svg class="absolute w-full h-full" style="top: 0; left: 0;">
            <circle cx={calibrationPositions.orange.x} cy={calibrationPositions.orange.y} r="12" fill="#f97316" stroke="#fff" stroke-width="3" />
          </svg>
        </div>
        
        <!-- Red dot for calibration (Testing) -->
        <div class="absolute left-0 top-0 w-full h-full pointer-events-none" style="z-index: 50;">
          <svg class="absolute w-full h-full" style="top: 0; left: 0;">
            <circle cx={calibrationPositions.red.x} cy={calibrationPositions.red.y} r="12" fill="#ef4444" stroke="#fff" stroke-width="3" />
          </svg>
        </div>
        

      </>
    ) : (
      <>
        <!-- Magenta icon -->
        <div class="hidden 2xl:block absolute" style={`left:${calibrationPositions.magenta.x}px;top:${calibrationPositions.magenta.y}px;z-index:51;transform:translate(-50%,-50%);`}>
          <div class="timeline-icon"><img src="/images/Timeline/Timeline/orange_ico.svg" alt="Orange Icon" style="width:32px;height:32px;" /></div>
        </div>
        <!-- Green icon -->
        <div class="hidden 2xl:block absolute" style={`left:${calibrationPositions.green.x}px;top:${calibrationPositions.green.y}px;z-index:51;transform:translate(-50%,-50%);`}>
          <div class="timeline-icon"><img src="/images/Timeline/Timeline/orange_ico.svg" alt="Orange Icon" style="width:32px;height:32px;" /></div>
        </div>
        <!-- Blue icon -->
        <div class="hidden 2xl:block absolute" style={`left:${calibrationPositions.blue.x}px;top:${calibrationPositions.blue.y}px;z-index:51;transform:translate(-50%,-50%);`}>
          <div class="timeline-icon"><img src="/images/Timeline/Timeline/orange_ico.svg" alt="Orange Icon" style="width:32px;height:32px;" /></div>
        </div>

        <!-- Red icon -->
        <div class="hidden 2xl:block absolute" style={`left:${calibrationPositions.red.x}px;top:${calibrationPositions.red.y}px;z-index:51;transform:translate(-50%,-50%);`}>
          <div class="timeline-icon"><img src="/images/Timeline/Timeline/orange_ico.svg" alt="Orange Icon" style="width:32px;height:32px;" /></div>
        </div>
      </>
    )}
    
    <!-- DRADS Flow Arrows (always visible) -->
    <div class="hidden 2xl:block absolute left-0 top-0 w-full h-full pointer-events-none" style="z-index: 10;">
      <svg class="absolute w-full h-full" style="top: 0; left: 0;">
        <defs>
          <marker id="arrowhead-drads" markerWidth="5" markerHeight="3.5" refX="4.5" refY="1.75" orient="auto">
            <polygon points="0 0, 5 1.75, 0 3.5" fill="#582350" />
          </marker>
        </defs>
        
        <!-- Brief to Design Work (larger arc) -->
        <path d={`M ${calibrationPositions.magenta.x} ${calibrationPositions.magenta.y} C 380 250 360 500 ${calibrationPositions.blue.x} ${calibrationPositions.blue.y}`} stroke="#582350" stroke-width="2" fill="none" marker-end="url(#arrowhead-drads)" />
        
        <!-- Brief to Glueing (larger arc) -->
        <path d={`M ${calibrationPositions.magenta.x} ${calibrationPositions.magenta.y} C 280 400 50 700 ${calibrationPositions.orange.x} ${calibrationPositions.orange.y}`} stroke="#582350" stroke-width="2" fill="none" marker-end="url(#arrowhead-drads)" />
        
        <!-- Design Work to Glueing (larger arc) -->
        <path d={`M ${calibrationPositions.blue.x} ${calibrationPositions.blue.y} C 280 750 100 850 ${calibrationPositions.orange.x} ${calibrationPositions.orange.y}`} stroke="#582350" stroke-width="2" fill="none" marker-end="url(#arrowhead-drads)" />
        
        <!-- Glueing to Testing (larger arc) -->
        <path d={`M ${calibrationPositions.orange.x} ${calibrationPositions.orange.y} C 180 950 280 1050 ${calibrationPositions.red.x} ${calibrationPositions.red.y}`} stroke="#582350" stroke-width="2" fill="none" marker-end="url(#arrowhead-drads)" />
        
        <!-- Design Work to Testing (larger arc) -->
        <path d={`M ${calibrationPositions.blue.x} ${calibrationPositions.blue.y} C 380 800 350 1000 ${calibrationPositions.red.x} ${calibrationPositions.red.y}`} stroke="#582350" stroke-width="2" fill="none" marker-end="url(#arrowhead-drads)" />
        
        <!-- NEW ARROWS: Brief to Frontend (now pointing to green dot) -->
        <path d={`M ${calibrationPositions.magenta.x} ${calibrationPositions.magenta.y} C 340 250 310 350 ${calibrationPositions.green.x - 10} ${calibrationPositions.green.y - 10}`} stroke="#582350" stroke-width="2" fill="none" marker-end="url(#arrowhead-drads)" />
        
        <!-- NEW ARROWS: Design to Frontend (now pointing to green dot) -->
        <path d={`M ${calibrationPositions.blue.x} ${calibrationPositions.blue.y} C 330 550 310 480 ${calibrationPositions.green.x - 10} ${calibrationPositions.green.y - 10}`} stroke="#582350" stroke-width="2" fill="none" marker-end="url(#arrowhead-drads)" />
        
        <!-- NEW ARROWS: Frontend to Glueing (now starting from green dot) -->
        <path d={`M ${calibrationPositions.green.x} ${calibrationPositions.green.y} C 200 600 120 750 ${calibrationPositions.orange.x - 10} ${calibrationPositions.orange.y - 10}`} stroke="#582350" stroke-width="2" fill="none" marker-end="url(#arrowhead-drads)" />
      </svg>
    </div>
    
    <!-- QUOTE BOX BELOW MAGENTA CARDS -->
    <div class="mt-[100px] w-full timeline-quotes">
      <div class="relative rounded-xl mb-8" style="background:#45414C; color:#fff; margin-left:50px; margin-right:50px;">
        <div class="relative z-10 flex flex-col justify-between" style="padding:28px 28px 28px 16px;">
          <div class="flex items-start gap-[4px]">
            <div class="flex flex-col flex-shrink-0" style="margin-top:-10px; mb-auto">
              <img src="/src/images/format_quote_white_24dp.svg" alt="Quote icon" class="w-12 h-12" />
            </div>
            <div class="flex-1 text-left" style="font-family: 'Montserrat', sans-serif; font-style: italic;">
              With DRADS, we kick off your project immediately with focused specs and start building right away. Our unique approach allows us to work on design, frontend, and backend simultaneously, while seamlessly integrating various systems. This means you'll see a working prototype faster, with live testing happening sooner than you might expect from traditional development methods.
            </div>
          </div>
        </div>
        <!-- Speech bubble tail (bottom left, flipped triangle) -->
        <div class="absolute left-0 -bottom-5 z-20" style="width:0;height:0;border-top:40px solid #45414C;border-right:40px solid transparent;"></div>
      </div>
      <div class="flex items-center gap-2 mt-2">
        <img src="/src/images/avatar Maciej.png" alt="Maciej" class="w-20 h-20 rounded-full" />
        <div class="flex flex-col">
          <span class="text-sm font-medium" style="color:#fff">Maciej</span>
          <span class="text-xs text-neutral-300">Deligo Owner</span>
        </div>
      </div>
    </div>
    
    <!-- SECOND QUOTE BOX -->
    <div class="mt-[50px] w-full timeline-quotes">
      <div class="relative rounded-xl mb-8" style="background:#45414C; color:#fff; margin-right:50px;">
        <div class="relative z-10 flex flex-col justify-between" style="padding:28px 28px 28px 16px;">
          <div class="flex items-start gap-[4px]">
            <div class="flex flex-col flex-shrink-0" style="margin-top:-10px; mb-auto">
              <img src="/src/images/format_quote_white_24dp.svg" alt="Quote icon" class="w-12 h-12" />
            </div>
            <div class="flex-1 text-left" style="font-family: 'Montserrat', sans-serif; font-style: italic;">
              In DRADS, we skip the separate UI prototyping phase. Our workflow is so tightly integrated across UI design, frontend, and backend that we can create a working first version quickly. This allows us to make visual changes based on your feedback without slowing down development. You'll see real progress faster, not just mockups.
            </div>
          </div>
        </div>
        <!-- Speech bubble tail (bottom right, flipped triangle) -->
        <div class="absolute right-0 -bottom-5 z-20" style="width:0;height:0;border-top:40px solid #45414C;border-left:40px solid transparent;"></div>
      </div>
      <div class="flex items-center gap-2 mt-2 justify-end">
        <div class="flex flex-col text-right">
          <span class="text-sm font-medium" style="color:#fff">Artur</span>
          <span class="text-xs text-neutral-300">Designer</span>
        </div>
        <img src="/src/images/avatar Artur.png" alt="Artur" class="w-20 h-20 rounded-full" />
      </div>
    </div>
    
    <!-- THIRD QUOTE BOX -->
    <div class="mt-[50px] w-full timeline-quotes">
      <div class="relative rounded-xl mb-8" style="background:#45414C; color:#fff; margin-left:50px; margin-right:50px;">
        <div class="relative z-10 flex flex-col justify-between" style="padding:28px 28px 28px 16px;">
          <div class="flex items-start gap-[4px]">
            <div class="flex flex-col flex-shrink-0" style="margin-top:-10px; mb-auto">
              <img src="/src/images/format_quote_white_24dp.svg" alt="Quote icon" class="w-12 h-12" />
            </div>
            <div class="flex-1 text-left" style="font-family: 'Montserrat', sans-serif; font-style: italic;">
              While traditional development might be struggling to launch version 1.0, we're already tens of features ahead with DRADS. This speed ignites creativity; clients who see their ideas come to life so quickly become fountains of innovation - we've seen this with every DRADS project. In traditional development, new ideas often stagnate due to time and cost constraints. But with DRADS, they flow like rivers, continuously shaping and improving the product - this has tremendous impact on the final product.
            </div>
          </div>
        </div>
        <!-- Speech bubble tail (bottom left, flipped triangle) -->
        <div class="absolute left-0 -bottom-5 z-20" style="width:0;height:0;border-top:40px solid #45414C;border-right:40px solid transparent;"></div>
      </div>
      <div class="flex items-center gap-2 mt-2">
        <img src="/src/images/avatar Maciej.png" alt="Maciej" class="w-20 h-20 rounded-full" />
        <div class="flex flex-col">
          <span class="text-sm font-medium" style="color:#fff">Maciej</span>
          <span class="text-xs text-neutral-300">Deligo Owner</span>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Center Column (background only) -->
  <div class={`w-full md:w-[20%] h-[2800px]`} style="background: linear-gradient(to right, #25202D 50%, #1D282F 50%);"></div>
  
  <!-- Right Column (Traditional) -->
  <div class="w-full md:w-[40%] bg-[#1D282F] overflow-visible flex flex-col items-end p-4 relative">
    <div class="flex flex-col justify-between h-[2800px] w-full">
      <InfographicCard title="Brief and Research" description="This initial phase involves understanding the project requirements, target audience, and goals, followed by researching the market and competitors. However, in classical development, this stage often results in overly broad or imprecise scopes. Without rapid prototyping, there's a risk of committing to features that may not align with actual user needs or market demands." bgColor="blue">
        <img slot="icon" src="/images/Timeline/timeline_cards_images/traditional_dev/brief.png" alt="Brief and Research" class="w-[270px] h-[202px] timeline-image-traditional-brief object-contain" style="margin-top: 40px;" />
      </InfographicCard>
      <InfographicCard title="UI/UX Design" description="Designers create wireframes and prototypes to map out the user journey and visual layout. However, without rapid real-world validation, these initial mockups may lead to designs that look great but perform poorly in practice. This can result in significant rework later, as actual user interactions often reveal usability issues that weren't apparent in static designs." bgColor="blue">
        <img slot="icon" src="/images/Timeline/timeline_cards_images/traditional_dev/Design.png" alt="UI/UX Design" class="w-[300px] h-[225px] timeline-image-traditional-design object-contain" style="margin-top: 40px;" />
      </InfographicCard>
      <InfographicCard title="Frontend Coding" description="Developers build the client-side of the application, translating designs into functional code using HTML, CSS, and JavaScript. Without iterative development, larger redesigns may be needed as user needs evolve or initial assumptions prove incorrect." bgColor="blue">
        <img slot="icon" src="/images/Timeline/timeline_cards_images/traditional_dev/front.png" alt="Frontend Coding" class="w-[300px] h-[225px] timeline-image-traditional-frontend object-contain" style="margin-top: 40px;" />
      </InfographicCard>
      <InfographicCard title="Backend Coding" description="This stage involves developing the server-side logic, databases, handling of data processing. With classic development approaches and without leveraging existing external systems via APIs, this phase can become extremely time-consuming, often leading to reinventing the wheel and delaying overall project timelines." bgColor="blue">
        <img slot="icon" src="/images/Timeline/timeline_cards_images/traditional_dev/backend.png" alt="Backend Coding" class="w-[300px] h-[225px] timeline-image-traditional-backend object-contain" style="margin-top: 40px;" />
      </InfographicCard>
      <InfographicCard title="Testing" description="The application undergoes rigorous testing, including unit, integration, and user acceptance tests, to identify and fix bugs. In classical development, testing is typically done on larger chunks of work. This approach means that when changes occur, the retesting process becomes lengthy and cumbersome, potentially slowing down the entire development cycle." bgColor="blue">
        <img slot="icon" src="/images/Timeline/timeline_cards_images/traditional_dev/test.png" alt="Testing" class="w-[300px] h-[225px] timeline-image-traditional-testing object-contain" style="margin-top: 40px;" />
      </InfographicCard>
      <InfographicCard title="Setting up the production environment" description="Developers deploy the application to a live server, configure necessary services, and ensure security measures are in place, preparing the app for public use. In the standard approach, this phase can be significantly time-consuming. This process often involves complex infrastructure decisions and implementations that can delay the actual launch of the application." bgColor="blue">
        <img slot="icon" src="/images/Timeline/timeline_cards_images/traditional_dev/devops.png" alt="Setting up the production environment" class="w-[230px] h-[173px] timeline-image-traditional-devops object-contain" style="margin-top: 20px;" />
      </InfographicCard>
    </div>
    
    <!-- Linear arrows connecting Cyan cards -->
    <div class="hidden 2xl:block absolute right-0 top-0 w-full h-full pointer-events-none">
      <!-- Arrow from Brief and Research to UI/UX Design -->
      <svg class="absolute w-full h-full" style="top: 0; left: 0;">
        <defs>
          <marker id="arrowhead-cyan" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
            <polygon points="0 0, 10 3.5, 0 7" fill="#1DA6AE" />
          </marker>
        </defs>
        <line x1="75%" y1="13%" x2="75%" y2="20%" stroke="#1DA6AE" stroke-width="1" marker-end="url(#arrowhead-cyan)" />
      </svg>
      
      <!-- Arrow from UI/UX Design to Frontend Coding -->
      <svg class="absolute w-full h-full" style="top: 0; left: 0;">
        <line x1="75%" y1="30%" x2="75%" y2="37%" stroke="#1DA6AE" stroke-width="1" marker-end="url(#arrowhead-cyan)" />
      </svg>
      
      <!-- Arrow from Frontend Coding to Backend Coding -->
      <svg class="absolute w-full h-full" style="top: 0; left: 0;">
        <line x1="75%" y1="47%" x2="75%" y2="54%" stroke="#1DA6AE" stroke-width="1" marker-end="url(#arrowhead-cyan)" />
      </svg>
      
      <!-- Arrow from Backend Coding to Testing -->
      <svg class="absolute w-full h-full" style="top: 0; left: 0;">
        <line x1="75%" y1="64%" x2="75%" y2="71%" stroke="#1DA6AE" stroke-width="1" marker-end="url(#arrowhead-cyan)" />
      </svg>
      
      <!-- Arrow from Testing to Production Environment -->
      <svg class="absolute w-full h-full" style="top: 0; left: 0;">
        <line x1="75%" y1="81%" x2="75%" y2="88%" stroke="#1DA6AE" stroke-width="1" marker-end="url(#arrowhead-cyan)" />
      </svg>
    </div>
  </div>

  <!-- Timeline overlay, absolutely centered and independent -->
  <div 
    class={`absolute ${timelineHeight} overflow-visible translate-x-[-50%] w-[300px]`}
    style="top: 0; left: 50%"
  >
        <!-- Diagonal Lines -->
        <div class="absolute bottom-[26%] left-[34.707%] right-[34.997%] top-[74%]">
          <svg class="block size-full" fill="none" preserveAspectRatio="none" viewBox="0 0 139 55">
            <path d={svgPaths.p34c0f00} fill="white" />
          </svg>
        </div>
        <div class="absolute bottom-[25.5%] left-[34.707%] right-[34.997%] top-[74.5%]">
          <svg class="block size-full" fill="none" preserveAspectRatio="none" viewBox="0 0 139 55">
            <path d={svgPaths.p34c0f00} fill="white" />
          </svg>
        </div>
        <!-- Timeline Frames -->
        {frames.map((frame) => (
          <div
            class="absolute z-10 box-border content-stretch flex flex-col items-start justify-end leading-[0] not-italic p-[8px] rounded-lg text-[#ffffff] text-center translate-x-[-50%] translate-y-[-50%]"
            style={`top: ${frame.top}; left: 50%; background: ${frame.text.includes('week') ? 'linear-gradient(to right, #25202D 50%, #1D282F 50%)' : '#3d515e'};`}
          >
            <div class="font-montserrat-bold h-[58px] relative shrink-0 text-[56px] w-full">
              <p class="block leading-[normal] whitespace-nowrap">{frame.number}</p>
            </div>
            <div class="font-montserrat-semibold h-8 relative shrink-0 text-[20px] w-full text-center">
              <p class="block leading-[normal]">{frame.text}</p>
            </div>
          </div>
        ))}
        <!-- Vertical Connecting Line (dashed, z-0) -->
        <div
          class="absolute z-0 w-[2px] border-l-2 border-dashed border-white translate-x-[-50%]"
          style="left: 50%; top: 0; height: 100%;"
        ></div>
        <!-- More Diagonal Lines -->
        <div class="absolute bottom-[35.906%] left-[34.707%] right-[34.997%] top-[62.224%]">
          <svg class="block size-full" fill="none" preserveAspectRatio="none" viewBox="0 0 139 55">
            <path d={svgPaths.p34c0f00} fill="white" />
          </svg>
        </div>
        <div class="absolute bottom-[35.25%] left-[34.707%] right-[34.997%] top-[62.88%]">
          <svg class="block size-full" fill="none" preserveAspectRatio="none" viewBox="0 0 139 55">
            <path d={svgPaths.p34c0f00} fill="white" />
          </svg>
        </div>
        <!-- Timeline Arrows -->
        {arrows.map((arrow) => (
          <div class="absolute flex items-center justify-center left-1/2 translate-x-[-50%] w-[0px]" style={`height: ${arrow.height}; top: ${arrow.top}`}> 
            <div class="flex-none rotate-[90deg]">
              <div class="h-0 relative" style={`width: ${arrow.width}`}> 
                <div class="absolute bottom-[-5.333px] left-[-1.852%] right-0 top-[-5.333px]">
                  <svg class="block size-full" fill="none" preserveAspectRatio="none" viewBox={arrow.viewBox}>
                    <path d={svgPaths[arrow.pathKey as keyof typeof svgPaths]} fill="white" />
                  </svg>
                </div>
              </div>
            </div>
          </div>
        ))}
        {milestones.map(m => (
          <div class="absolute"
            style={`top: ${m.top}; ${m.tail === 'right' ? 'left: 0;' : 'right: 0;'} transform: translateY(-50%); z-index: 30;`}>
            <TimelineTooltip
              text={m.text}
              color={m.color}
              direction={m.tail === 'right' ? 'left' : 'right'}
              showConnector={true}
            >
              {m.icon && (
                <span slot="icon" class="flex justify-center items-center w-full" set:html={m.icon} />
              )}
            </TimelineTooltip>
          </div>
        ))}
      </div>

  <!-- Test Cards overlay, absolutely positioned in the left column -->
</div>

<style>
  /* Timeline specific font classes */
  .font-montserrat-bold {
    font-family: 'Montserrat', sans-serif;
    font-weight: 700;
  }
  
  .font-montserrat-semibold {
    font-family: 'Montserrat', sans-serif;
    font-weight: 600;
  }

  /* Custom breakpoint at 1400px for timeline quotes */
  .timeline-quotes {
    display: none;
  }
  
  /* Show quotes at 1400px and above */
  @media (min-width: 1400px) {
    .timeline-quotes {
      display: block;
    }
    
    /* DRADS cards (left column) image sizing */
    .timeline-image-brief {
      width: 331px;
      height: 248px;
    }
    
    .timeline-image-frontend {
      width: 294px;
      height: 221px;
    }
    
    .timeline-image-design {
      width: 331px;
      height: 248px;
    }
    
    .timeline-image-glue {
      width: 360px;
      height: 208px;
    }
    
    .timeline-image-testing {
      width: 368px;
      height: 276px;
    }
    
    /* Traditional cards (right column) image sizing */
    .timeline-image-traditional-brief {
      width: 338px;
      height: 253px;
    }
    
    .timeline-image-traditional-design {
      width: 375px;
      height: 281px;
    }
    
    .timeline-image-traditional-frontend {
      width: 375px;
      height: 281px;
    }
    
    .timeline-image-traditional-backend {
      width: 338px;
      height: 253px;
    }
    
    .timeline-image-traditional-testing {
      width: 338px;
      height: 253px;
    }
    
    .timeline-image-traditional-devops {
      width: 270px;
      height: 203px;
    }
  }
</style> 